{"ast":null,"code":"import React,{useState,useEffect}from'react';import styles from'../components/MovieRecommender/MovieRecommender.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DisplayMovie(_ref){let{movie}=_ref;const[isFilled,setIsFilled]=useState(globalThis.prefMovId===null||globalThis.prefMovId===undefined?false:globalThis.prefMovId.includes(movie[\"imdb_id\"]));const handleClick=()=>{if(isFilled){globalThis.prefMovId=globalThis.prefMovId.filter(elem=>elem!==movie[\"imdb_id\"]);//globalThis.prefMov = globalThis.prefMov.filter(elem => elem !== movie[\"original_title\"]);\nglobalThis.prefMov.splice(globalThis.prefMov.indexOf(movie[\"original_title\"]),1);//globalThis.prefLang = globalThis.prefLang.filter(elem => elem !== movie[\"original_language\"]);\nglobalThis.prefLang.splice(globalThis.prefLang.indexOf(movie[\"original_language\"]),1);//globalThis.prefGen = globalThis.prefGen.filter(elem => !movie[\"genres\"].some(obj => obj[\"id\"] === elem[\"id\"]));\nmovie[\"genres\"].forEach(obj1=>{let idToRemove=obj1.id;let indexToRemove=globalThis.prefGen.findIndex(obj2=>obj2.id===idToRemove);if(indexToRemove!==-1){globalThis.prefGen.splice(indexToRemove,1);}});}else{globalThis.prefMovId===null||globalThis.prefMovId===undefined?globalThis.prefMovId=[movie[\"imdb_id\"]]:globalThis.prefMovId.push(movie[\"imdb_id\"]);globalThis.prefMov===null||globalThis.prefMov===undefined?globalThis.prefMov=[movie[\"original_title\"]]:globalThis.prefMov.push(movie[\"original_title\"]);globalThis.prefLang===null||globalThis.prefLang===undefined?globalThis.prefLang=[movie[\"original_language\"]]:globalThis.prefLang.push(movie[\"original_language\"]);globalThis.prefGen===null||globalThis.prefGen===undefined?globalThis.prefGen=movie[\"genres\"]:movie[\"genres\"].map(gen=>globalThis.prefGen.push(gen));}const newPref={userName:globalThis.userName,prefMovId:globalThis.prefMovId,prefMov:globalThis.prefMov,prefLang:globalThis.prefLang,prefGen:globalThis.prefGen};var request=new Request('http://localhost:3001/api/changePref',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(newPref)});fetch(request).then(function(response){response.json().then(function(data){});});setIsFilled(!isFilled);};return/*#__PURE__*/_jsxs(\"div\",{className:styles.movieCardContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.imageContainer,children:/*#__PURE__*/_jsx(\"div\",{className:styles.bgImage,style:{backgroundImage:\"url(\".concat(\"https://image.tmdb.org/t/p/original/\"+movie[\"poster_path\"],\")\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.movieInfo,children:[globalThis.userName===null||globalThis.userName===undefined?null:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",onClick:handleClick,children:/*#__PURE__*/_jsx(\"path\",{fill:isFilled?'gold':'none',stroke:\"black\"// Add stroke property for black lines\n,strokeWidth:\"2\"// Set stroke width\n,d:\"M12 2l2.851 8.727h9.148l-7.397 5.376 2.849 8.727-7.401-5.375-7.401 5.375 2.848-8.727-7.398-5.376h9.148z\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Movie Details\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:movie[\"original_title\"]}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Released Date: \",movie[\"release_date\"]]})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Rating: \",movie[\"vote_average\"],\" / 10\"]}),/*#__PURE__*/_jsx(\"p\",{children:movie[\"overview\"]&&movie[\"overview\"].substr(0,350)}),/*#__PURE__*/_jsx(\"div\",{className:styles.tagsContainer,children:movie[\"genres\"]&&movie[\"genres\"].map(g=>/*#__PURE__*/_jsx(\"span\",{children:g[\"name\"]},g[\"id\"]))})]})]});}export default DisplayMovie;","map":{"version":3,"names":["React","useState","useEffect","styles","jsx","_jsx","jsxs","_jsxs","DisplayMovie","_ref","movie","isFilled","setIsFilled","globalThis","prefMovId","undefined","includes","handleClick","filter","elem","prefMov","splice","indexOf","prefLang","forEach","obj1","idToRemove","id","indexToRemove","prefGen","findIndex","obj2","push","map","gen","newPref","userName","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","json","data","className","movieCardContainer","children","imageContainer","bgImage","style","backgroundImage","concat","movieInfo","xmlns","width","height","viewBox","onClick","fill","stroke","strokeWidth","d","substr","tagsContainer","g"],"sources":["/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520PROJECT3/frontend/src/pages/DisplayMovie.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\n\nfunction DisplayMovie({movie}) {\n    const [isFilled, setIsFilled] = useState(globalThis.prefMovId === null || globalThis.prefMovId === undefined ? false :\n        globalThis.prefMovId.includes(movie[\"imdb_id\"]));\n    const handleClick = () => {\n        if(isFilled) {\n            globalThis.prefMovId = globalThis.prefMovId.filter(elem => elem !== movie[\"imdb_id\"]);\n            //globalThis.prefMov = globalThis.prefMov.filter(elem => elem !== movie[\"original_title\"]);\n            globalThis.prefMov.splice(globalThis.prefMov.indexOf(movie[\"original_title\"]), 1);\n            //globalThis.prefLang = globalThis.prefLang.filter(elem => elem !== movie[\"original_language\"]);\n            globalThis.prefLang.splice(globalThis.prefLang.indexOf(movie[\"original_language\"]), 1);\n            //globalThis.prefGen = globalThis.prefGen.filter(elem => !movie[\"genres\"].some(obj => obj[\"id\"] === elem[\"id\"]));\n            movie[\"genres\"].forEach(obj1 => {\n                    let idToRemove = obj1.id;\n                    let indexToRemove = globalThis.prefGen.findIndex(obj2 => obj2.id === idToRemove);\n                    if (indexToRemove !== -1) {\n                        globalThis.prefGen.splice(indexToRemove, 1);\n                    }\n                });\n        }\n        else {\n            globalThis.prefMovId === null || globalThis.prefMovId === undefined ? globalThis.prefMovId = [movie[\"imdb_id\"]] :\n                globalThis.prefMovId.push(movie[\"imdb_id\"]);\n            globalThis.prefMov === null || globalThis.prefMov === undefined ? globalThis.prefMov = [movie[\"original_title\"]] :\n                globalThis.prefMov.push(movie[\"original_title\"]);\n            globalThis.prefLang === null || globalThis.prefLang === undefined ? globalThis.prefLang = [movie[\"original_language\"]] :\n                globalThis.prefLang.push(movie[\"original_language\"]);\n             globalThis.prefGen === null || globalThis.prefGen === undefined ? globalThis.prefGen = movie[\"genres\"] :\n                movie[\"genres\"].map(gen => globalThis.prefGen.push(gen));\n        }\n        const newPref = {\n          userName: globalThis.userName,\n           prefMovId: globalThis.prefMovId,\n           prefMov: globalThis.prefMov,\n           prefLang: globalThis.prefLang,\n           prefGen: globalThis.prefGen\n        }\n        var request = new Request('http://localhost:3001/api/changePref', {\n                                            method: 'POST',\n                                            headers: new Headers({'Content-Type': 'application/json'}),\n                                            body: JSON.stringify(newPref)\n                                        })\n                                        fetch(request)\n                                            .then(function(response) {\n                                                response.json()\n                                                    .then(function(data) {\n                                                    })\n                                             })\n      setIsFilled(!isFilled);\n      };\n    return (\n                <div className={styles.movieCardContainer}>\n                    <div className={styles.imageContainer}>\n                        <div\n                            className={styles.bgImage}\n                            style={{ backgroundImage: `url(${\"https://image.tmdb.org/t/p/original/\" + movie[\"poster_path\"]})` }}\n                        />\n                    </div>\n                    <div className={styles.movieInfo}>\n                        {globalThis.userName === null || globalThis.userName === undefined ? null : <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"24\"\n                              height=\"24\"\n                              viewBox=\"0 0 24 24\"\n                              onClick={handleClick}\n                            >\n                              <path\n                                fill={isFilled ? 'gold' : 'none'}\n                                stroke=\"black\" // Add stroke property for black lines\n                                strokeWidth=\"2\" // Set stroke width\n                                d=\"M12 2l2.851 8.727h9.148l-7.397 5.376 2.849 8.727-7.401-5.375-7.401 5.375 2.848-8.727-7.398-5.376h9.148z\"\n                              />\n                        </svg>}\n                        <h2>Movie Details</h2>\n                        <div>\n                            <h1>{movie[\"original_title\"]}</h1>\n                            <small>Released Date: {movie[\"release_date\"]}</small>\n                        </div>\n                        <h4>Rating: {movie[\"vote_average\"]} / 10</h4>\n                        <p>{movie[\"overview\"] && movie[\"overview\"].substr(0, 350)}</p>\n                        <div className={styles.tagsContainer}>\n                            {movie[\"genres\"] &&\n                                movie[\"genres\"].map(g => (\n                                    <span key={g[\"id\"]}>{g[\"name\"]}</span>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\nexport default DisplayMovie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}