{"ast":null,"code":"var _jsxFileName = \"/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520Project2/frontend/src/pages/Landing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header/Header.js';\nimport Navbar from '../components/Navbar/Navbar.js';\nimport Footer from '../components/Footer/Footer.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landing() {\n  _s();\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] : globalThis.prefGen;\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] : globalThis.prefLang;\n  const handleCheckLanguageChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setCheckedLanguages([...checkedLanguage, value]);\n    } else {\n      setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    }\n    ;\n  };\n  const handleCheckGenreChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setCheckedGenres([...checkedGenres, value]);\n    } else {\n      setCheckedGenres(checkedGenres.filter(item => item !== value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rowC,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.filterSection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.genreFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `checkbox-${genre[\"id\"]}`,\n                  value: genre[\"name\"],\n                  checked: checkedGenres.includes(genres[\"name\"]),\n                  onChange: handleCheckGenreChange,\n                  name: genre[\"name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `checkbox-${genre[\"id\"]}`,\n                  children: genre[\"name\"]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this)]\n              }, genre[\"id\"], true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.languageFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `checkbox-${genre[\"id\"]}`,\n                  value: language,\n                  checked: checkedLanguage.includes(language),\n                  onChange: handleCheckLanguageChangeChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: language,\n                  children: language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this)]\n              }, language, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.searchButton,\n              onClick: () => setTrigRender(trigRender + 1),\n              children: \"Refresh Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(SearchMovie, {\n            genres: checkedGenres,\n            languages: checkedLanguage\n          }, new Date().getTime(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(Landing, \"35fYb0EIJG6E76atFX13q83E7pc=\");\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","MovieRecommender","ScrollableSection","styles","SearchMovie","jsxDEV","_jsxDEV","Landing","_s","trigRender","setTrigRender","checkedGenres","setCheckedGenres","checkedLanguage","setCheckedLanguages","genres","globalThis","prefGen","undefined","languages","prefLang","handleCheckLanguageChange","event","value","checked","target","filter","item","handleCheckGenreChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowC","leftComp","filterSection","genreFilter","map","genre","index","checkboxContainer","type","id","includes","onChange","name","htmlFor","languageFilter","language","handleCheckLanguageChangeChange","searchButton","onClick","rightComp","Date","getTime","_c","$RefreshReg$"],"sources":["/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520Project2/frontend/src/pages/Landing.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Header from '../components/Header/Header.js'\nimport Navbar from '../components/Navbar/Navbar.js'\nimport Footer from '../components/Footer/Footer.js'\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js'\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js'\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\n\nfunction Landing() {\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\n                         globalThis.prefGen;\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] :\n                            globalThis.prefLang;\n  const handleCheckLanguageChange = (event) => {\n      const { value, checked } = event.target;\n      if (checked) {\n        setCheckedLanguages([...checkedLanguage, value]);\n      } else {\n        setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    };\n    }\n  const handleCheckGenreChange = (event) => {\n        const { value, checked } = event.target;\n        if (checked) {\n          setCheckedGenres([...checkedGenres, value]);\n        } else {\n          setCheckedGenres(checkedGenres.filter(item => item !== value));\n      }\n  };\n  return (\n      <div >\n        <Header/>\n        <div className={styles.rowC}>\n            <div className={styles.leftComp}>\n            <ScrollableSection>\n                <div className={styles.filterSection}>\n                    <div className={styles.genreFilter}>\n                        <h3>Genres</h3>\n                        {genres.map((genre, index) => (\n                            <div key={genre[\"id\"]} className={styles.checkboxContainer}>\n                                <input type=\"checkbox\"\n                                id={`checkbox-${genre[\"id\"]}`}\n                                value={genre[\"name\"]}\n                                checked={checkedGenres.includes(genres[\"name\"])}\n                                onChange={handleCheckGenreChange}\n                                name={genre[\"name\"]} />\n                                <label htmlFor={`checkbox-${genre[\"id\"]}`}>{genre[\"name\"]}</label>\n                            </div>\n                            ))}\n                    </div>\n                    <div className={styles.languageFilter}>\n                        <h3>Languages</h3>\n                        {languages.map((language, index) => (\n                            <div key={language} className={styles.checkboxContainer}>\n                                <input type=\"checkbox\"\n                                id={`checkbox-${genre[\"id\"]}`}\n                                value={language}\n                                checked={checkedLanguage.includes(language)}\n                                onChange={handleCheckLanguageChangeChange} />\n                                <label htmlFor={language}>{language}</label>\n                            </div>\n                            ))}\n                    </div>\n                    <button className={styles.searchButton} onClick={() => setTrigRender(trigRender + 1)}>\n                                Refresh Preferences\n                    </button>\n                </div>\n            </ScrollableSection>\n            </div>\n            <div className={styles.rightComp}>\n            <ScrollableSection>\n                <SearchMovie\n                    key={new Date().getTime()}\n                    genres = {checkedGenres}\n                    languages = {checkedLanguage}\n                />\n            </ScrollableSection>\n            </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Landing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}