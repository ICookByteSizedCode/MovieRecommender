{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peep\\\\Documents\\\\GitHub\\\\COMPSCI520Project\\\\frontend\\\\src\\\\pages\\\\Landing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header/Header.js';\nimport Navbar from '../components/Navbar/Navbar.js';\nimport Footer from '../components/Footer/Footer.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landing() {\n  _s();\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\n  //  globalThis.prefGen;\n  [...new Set(globalThis.prefGen.map(g => JSON.stringify(g)))].map(g => JSON.parse(g));\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] : [...new Set(globalThis.prefLang)];\n  const handleCheckLanguageChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setCheckedLanguages([...checkedLanguage, value]);\n    } else {\n      setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    }\n    ;\n  };\n\n  // const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\n\n  // const handleCheckGenreChange = (event) => {\n  //    const checkedId = event.target.value;\n  //    if(event.target.checked){\n  //     setCheckedGenres([...checkedGenres, JSON.parse(checkedId)])\n  //    }else{\n  //     setCheckedGenres(checkedGenres.filter(id=> id[\"id\"] !== JSON.parse(checkedId)[\"id\"]))\n  //    }\n  //    }\n\n  const handleCheckGenreChange = event => {\n    const genre = JSON.parse(event.target.value);\n    const isGenreChecked = event.target.checked;\n    if (isGenreChecked) {\n      if (!checkedGenres.some(g => g.id === genre.id)) {\n        setCheckedGenres([...checkedGenres, genre]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rowC,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.filterSection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.genreFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: JSON.stringify(genre),\n                  checked: checkedGenres.some(elem => elem[\"id\"] === JSON.parse(JSON.stringify(genre))[\"id\"]),\n                  onChange: event => {\n                    handleCheckGenreChange(event);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `checkbox-${genre.id}`,\n                  children: genre.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 36\n                }, this)]\n              }, genre, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.languageFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: language,\n                  value: language,\n                  checked: checkedLanguage.includes(language),\n                  onChange: handleCheckLanguageChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: language,\n                  children: language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)]\n              }, language, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.searchButton,\n              onClick: () => setTrigRender(trigRender + 1),\n              children: \"Refresh Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(SearchMovie, {\n            genres: checkedGenres,\n            languages: checkedLanguage\n          }, new Date().getTime(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n_s(Landing, \"35fYb0EIJG6E76atFX13q83E7pc=\");\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","MovieRecommender","ScrollableSection","styles","SearchMovie","jsxDEV","_jsxDEV","Landing","_s","trigRender","setTrigRender","checkedGenres","setCheckedGenres","checkedLanguage","setCheckedLanguages","genres","globalThis","prefGen","undefined","Set","map","g","JSON","stringify","parse","languages","prefLang","handleCheckLanguageChange","event","value","checked","target","filter","item","handleCheckGenreChange","genre","isGenreChecked","some","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowC","leftComp","filterSection","genreFilter","index","checkboxContainer","type","elem","onChange","htmlFor","name","languageFilter","language","includes","searchButton","onClick","rightComp","Date","getTime","_c","$RefreshReg$"],"sources":["C:/Users/Peep/Documents/GitHub/COMPSCI520Project/frontend/src/pages/Landing.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Header from '../components/Header/Header.js'\r\nimport Navbar from '../components/Navbar/Navbar.js'\r\nimport Footer from '../components/Footer/Footer.js'\r\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js'\r\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js'\r\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\r\nimport SearchMovie from './SearchMovie';\r\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\r\n\r\nfunction Landing() {\r\n  const [trigRender, setTrigRender] = useState(0);\r\n  const [checkedGenres, setCheckedGenres] = useState([]);\r\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\r\n\r\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\r\n                //  globalThis.prefGen;\r\n                [...new Set(globalThis.prefGen.map(g => JSON.stringify(g)))].map(g => JSON.parse(g));\r\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] :\r\n                    [...new Set(globalThis.prefLang)];\r\n\r\n  const handleCheckLanguageChange = (event) => {\r\n      const { value, checked } = event.target;\r\n      if (checked) {\r\n        setCheckedLanguages([...checkedLanguage, value]);\r\n      } else {\r\n        setCheckedLanguages(checkedLanguage.filter(item => item !== value));\r\n    };\r\n  };\r\n\r\n\r\n\r\n  // const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\r\n\r\n  // const handleCheckGenreChange = (event) => {\r\n  //    const checkedId = event.target.value;\r\n  //    if(event.target.checked){\r\n  //     setCheckedGenres([...checkedGenres, JSON.parse(checkedId)])\r\n  //    }else{\r\n  //     setCheckedGenres(checkedGenres.filter(id=> id[\"id\"] !== JSON.parse(checkedId)[\"id\"]))\r\n  //    }\r\n  //    }\r\n     \r\n  const handleCheckGenreChange = (event) => {\r\n    const genre = JSON.parse(event.target.value);\r\n    const isGenreChecked = event.target.checked;\r\n    if(isGenreChecked) {\r\n      if(!checkedGenres.some(g => g.id === genre.id)) {\r\n        setCheckedGenres([...checkedGenres, genre]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div >\r\n        <Header/>\r\n        <div className={styles.rowC}>\r\n            <div className={styles.leftComp}>\r\n            <ScrollableSection>\r\n                <div className={styles.filterSection}>\r\n                    <div className={styles.genreFilter}>\r\n                        <h3>Genres</h3>\r\n                        {genres.map((genre, index) => (\r\n                            <div key={genre} className={styles.checkboxContainer}>\r\n                                <input\r\n                                   type=\"checkbox\"\r\n                                   value={JSON.stringify(genre)}\r\n                                   checked={checkedGenres.some(elem => elem[\"id\"] === JSON.parse(JSON.stringify(genre))[\"id\"])}\r\n                                   onChange={(event) => { handleCheckGenreChange(event) }}\r\n                                   />\r\n                                   <label htmlFor={`checkbox-${genre.id}`}>{genre.name}</label>\r\n                            </div>\r\n                            ))}\r\n                    </div>\r\n                    <div className={styles.languageFilter}>\r\n                        <h3>Languages</h3>\r\n                        {languages.map((language, index) => (\r\n                            <div key={language} className={styles.checkboxContainer}>\r\n                                <input type=\"checkbox\"\r\n                                id={language}\r\n                                value={language}\r\n                                checked={checkedLanguage.includes(language)}\r\n                                onChange={handleCheckLanguageChange} />\r\n                                <label htmlFor={language}>{language}</label>\r\n                            </div>\r\n                            ))}\r\n                    </div>\r\n                    <button className={styles.searchButton} onClick={() => setTrigRender(trigRender + 1)}>\r\n                                Refresh Preferences\r\n                    </button>\r\n                </div>\r\n            </ScrollableSection>\r\n            </div>\r\n            <div className={styles.rightComp}>\r\n            <ScrollableSection>\r\n                <SearchMovie\r\n                    key={new Date().getTime()}\r\n                    genres = {checkedGenres}\r\n                    languages = {checkedLanguage}\r\n                />\r\n            </ScrollableSection>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Landing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}