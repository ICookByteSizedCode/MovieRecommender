{"ast":null,"code":"var _jsxFileName = \"/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520PROJECT3/frontend/src/pages/Checkbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UserLogin.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreferencesForm = () => {\n  _s();\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const genres = [\"Action\", \"Adventure\", \"Comedy\", \"Horror\", \"Romance\", \"Science Fiction\"];\n  const languages = [\"English\", \"Hindi\", \"French\", \"Spanish\", \"Italian\", \"Mandarin\", \"Japanese\"];\n  const handleGenreChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setSelectedGenres([...selectedGenres, value]);\n    } else {\n      setSelectedGenres(selectedGenres.filter(genre => genre !== value));\n    }\n  };\n  const handleLanguageChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setSelectedLanguages([...selectedLanguages, value]);\n    } else {\n      setSelectedLanguages(selectedLanguages.filter(language => language !== value));\n    }\n  };\n  const handleSubmit = () => {\n    // Prepare data to send to the backend\n    const formData = {\n      selectedGenres: selectedGenres,\n      selectedLanguages: selectedLanguages,\n      selectedMovies: globalThis.prefMov\n    };\n    console.log(\"Selected Genres:\", selectedGenres);\n    console.log(\"Selected Languages:\", selectedLanguages);\n    console.log(\"Selected Movies:\", globalThis.prefMov);\n    // Make an HTTP POST request to the backend using fetch\n    fetch('http://127.0.0.1:5000/submit-preferences', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Response from server:', data);\n      let result = [];\n      for (let i = 0; i < data.length; i++) {\n        let curObj = {\n          id: i + 1\n        };\n        curObj[\"posterUrl\"] = \"https://image.tmdb.org/t/p/original/\" + data[i][\"poster_path\"];\n        curObj[\"title\"] = data[i][\"original_title\"];\n        curObj[\"description\"] = data[i][\"overview\"];\n        curObj[\"mov_id\"] = data[i][\"id\"];\n        result.push(curObj);\n      }\n      setSearchedMovies(result);\n    }).catch(error => {\n      console.error('Error submitting preferences:', error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select your preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: genre,\n            onChange: handleGenreChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, genre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Languages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), languages.map(language => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: language,\n            onChange: handleLanguageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, language, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), searchedMovies.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MovieRecommender, {\n        movies: searchedMovies\n      }, new Date().getTime(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(PreferencesForm, \"fxVgrRFGawqeBzq4XpmRXM+JIZk=\");\n_c = PreferencesForm;\nexport default PreferencesForm;\nvar _c;\n$RefreshReg$(_c, \"PreferencesForm\");","map":{"version":3,"names":["React","useState","MovieRecommender","jsxDEV","_jsxDEV","PreferencesForm","_s","selectedGenres","setSelectedGenres","selectedLanguages","setSelectedLanguages","searchedMovies","setSearchedMovies","genres","languages","handleGenreChange","event","value","checked","target","filter","genre","handleLanguageChange","language","handleSubmit","formData","selectedMovies","globalThis","prefMov","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","result","i","length","curObj","id","push","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","onClick","movies","Date","getTime","_c","$RefreshReg$"],"sources":["/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520PROJECT3/frontend/src/pages/Checkbox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './UserLogin.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\n\nconst PreferencesForm = () => {\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [searchedMovies, setSearchedMovies] = useState([])\n\n  const genres = [\n    \"Action\", \"Adventure\", \"Comedy\", \"Horror\", \"Romance\", \"Science Fiction\"\n  ];\n\n  const languages = [\n    \"English\", \"Hindi\", \"French\", \"Spanish\", \"Italian\", \"Mandarin\", \"Japanese\"\n  ];\n\n  const handleGenreChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedGenres([...selectedGenres, value]);\n    } else {\n      setSelectedGenres(selectedGenres.filter(genre => genre !== value));\n    }\n  };\n\n  const handleLanguageChange = (event) => {\n    const { value, checked } = event.target;\n    if (checked) {\n      setSelectedLanguages([...selectedLanguages, value]);\n    } else {\n      setSelectedLanguages(selectedLanguages.filter(language => language !== value));\n    }\n  };\n\n    const handleSubmit = () => {\n      // Prepare data to send to the backend\n      const formData = {\n        selectedGenres: selectedGenres,\n        selectedLanguages: selectedLanguages,\n        selectedMovies: globalThis.prefMov\n      };\n\n      console.log(\"Selected Genres:\", selectedGenres);\n      console.log(\"Selected Languages:\", selectedLanguages);\n      console.log(\"Selected Movies:\", globalThis.prefMov);\n      // Make an HTTP POST request to the backend using fetch\n      fetch('http://127.0.0.1:5000/submit-preferences', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Response from server:', data);\n        let result = [];\n        for(let i = 0; i < data.length; i++) {\n            let curObj = {id: i + 1};\n            curObj[\"posterUrl\"] = \"https://image.tmdb.org/t/p/original/\" + data[i][\"poster_path\"];\n            curObj[\"title\"] = data[i][\"original_title\"];\n            curObj[\"description\"] = data[i][\"overview\"];\n            curObj[\"mov_id\"] = data[i][\"id\"]\n            result.push(curObj)\n        }\n        setSearchedMovies(result)\n      })\n      .catch(error => {\n        console.error('Error submitting preferences:', error.message);\n      });\n    };\n\n  return (\n    <div>\n      <div>\n        <h2>Select your preferences</h2>\n        <div>\n          <h3>Genres:</h3>\n          {genres.map(genre => (\n            <div key={genre}>\n              <input\n                type=\"checkbox\"\n                value={genre}\n                onChange={handleGenreChange}\n              />\n              <label>{genre}</label>\n            </div>\n          ))}\n        </div>\n        <div>\n          <h3>Languages:</h3>\n          {languages.map(language => (\n            <div key={language}>\n              <input\n                type=\"checkbox\"\n                value={language}\n                onChange={handleLanguageChange}\n              />\n              <label>{language}</label>\n            </div>\n          ))}\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n\n      {searchedMovies.length !== 0 ?\n      (<div>\n        <MovieRecommender\n            key={new Date().getTime()}\n            movies = {searchedMovies}\n        />\n      </div>) : null}\n    </div>\n\n  );\n};\n\nexport default PreferencesForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}