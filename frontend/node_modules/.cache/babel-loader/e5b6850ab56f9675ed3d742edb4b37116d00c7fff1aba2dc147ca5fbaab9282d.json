{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Peep\\\\Documents\\\\GitHub\\\\COMPSCI520Project\\\\frontend\\\\src\\\\pages\\\\Landing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header/Header.js';\nimport Navbar from '../components/Navbar/Navbar.js';\nimport Footer from '../components/Footer/Footer.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landing() {\n  _s();\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const uniqueGenres = genres.reduce((acc, current) => {\n    const x = acc.find(item => item.id === current.id);\n    if (!x) {\n      return acc.concat([current]);\n    } else {\n      return acc;\n    }\n  }, []);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\n  // [...new Set(globalThis.prefGen)];\n  globalThis.prefGen;\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] : [...new Set(globalThis.prefLang)];\n  const handleCheckLanguageChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setCheckedLanguages([...checkedLanguage, value]);\n    } else {\n      setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    }\n    ;\n  };\n  const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\n  const handleCheckGenreChange = event => {\n    const checkedId = event.target.value;\n    if (event.target.checked) {\n      setCheckedGenres([...checkedGenres, JSON.parse(checkedId)]);\n    } else {\n      setCheckedGenres(checkedGenres.filter(id => id[\"id\"] !== JSON.parse(checkedId)[\"id\"]));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rowC,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.filterSection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.genreFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this), uniqueGenres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: JSON.stringify(genre),\n                  checked: checkedGenres.some(elem => elem[\"id\"] === JSON.parse(JSON.stringify(genre))[\"id\"]),\n                  onChange: event => {\n                    handleCheckGenreChange(event);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `checkbox-${genre.id}`,\n                  children: genre.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 36\n                }, this)]\n              }, genre, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.languageFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: language,\n                  value: language,\n                  checked: checkedLanguage.includes(language),\n                  onChange: handleCheckLanguageChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: language,\n                  children: language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this)]\n              }, language, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.searchButton,\n              onClick: () => setTrigRender(trigRender + 1),\n              children: \"Refresh Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(SearchMovie, {\n            genres: checkedGenres,\n            languages: checkedLanguage\n          }, new Date().getTime(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(Landing, \"35fYb0EIJG6E76atFX13q83E7pc=\");\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","MovieRecommender","ScrollableSection","styles","SearchMovie","jsxDEV","_jsxDEV","Landing","_s","trigRender","setTrigRender","checkedGenres","setCheckedGenres","checkedLanguage","setCheckedLanguages","uniqueGenres","genres","reduce","acc","current","x","find","item","id","concat","globalThis","prefGen","undefined","languages","prefLang","Set","handleCheckLanguageChange","event","value","checked","target","filter","arrayIncludesObject","array","object","some","isEqual","handleCheckGenreChange","checkedId","JSON","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowC","leftComp","filterSection","genreFilter","map","genre","index","checkboxContainer","type","stringify","elem","onChange","htmlFor","name","languageFilter","language","includes","searchButton","onClick","rightComp","Date","getTime","_c","$RefreshReg$"],"sources":["C:/Users/Peep/Documents/GitHub/COMPSCI520Project/frontend/src/pages/Landing.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Header from '../components/Header/Header.js'\r\nimport Navbar from '../components/Navbar/Navbar.js'\r\nimport Footer from '../components/Footer/Footer.js'\r\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js'\r\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js'\r\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\r\nimport SearchMovie from './SearchMovie';\r\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\r\n\r\n\r\n\r\nfunction Landing() {\r\n  const [trigRender, setTrigRender] = useState(0);\r\n  const [checkedGenres, setCheckedGenres] = useState([]);\r\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\r\n\r\n  const uniqueGenres = genres.reduce((acc, current) => {\r\n    const x = acc.find(item => item.id === current.id);\r\n    if (!x) {\r\n      return acc.concat([current]);\r\n    } else {\r\n      return acc;\r\n    }\r\n  }, []);\r\n  \r\n\r\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\r\n                    // [...new Set(globalThis.prefGen)];\r\n                    globalThis.prefGen\r\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] :\r\n                    [...new Set(globalThis.prefLang)];\r\n  const handleCheckLanguageChange = (event) => {\r\n      const { value, checked } = event.target;\r\n      if (checked) {\r\n        setCheckedLanguages([...checkedLanguage, value]);\r\n      } else {\r\n        setCheckedLanguages(checkedLanguage.filter(item => item !== value));\r\n    };\r\n    }\r\n  const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\r\n  const handleCheckGenreChange = (event) => {\r\n     const checkedId = event.target.value;\r\n     if(event.target.checked){\r\n      setCheckedGenres([...checkedGenres, JSON.parse(checkedId)])\r\n     }else{\r\n      setCheckedGenres(checkedGenres.filter(id=> id[\"id\"] !== JSON.parse(checkedId)[\"id\"]))\r\n     }\r\n     }\r\n  return (\r\n      <div >\r\n        <Header/>\r\n        <div className={styles.rowC}>\r\n            <div className={styles.leftComp}>\r\n            <ScrollableSection>\r\n                <div className={styles.filterSection}>\r\n                    <div className={styles.genreFilter}>\r\n                        <h3>Genres</h3>\r\n                        {uniqueGenres.map((genre, index) => (\r\n                            <div key={genre} className={styles.checkboxContainer}>\r\n                                <input\r\n                                   type=\"checkbox\"\r\n                                   value={JSON.stringify(genre)}\r\n                                   checked={checkedGenres.some(elem => elem[\"id\"] === JSON.parse(JSON.stringify(genre))[\"id\"])}\r\n                                   onChange={(event) => { handleCheckGenreChange(event) }}\r\n                                   />\r\n                                   <label htmlFor={`checkbox-${genre.id}`}>{genre.name}</label>\r\n                            </div>\r\n                            ))}\r\n                    </div>\r\n                    <div className={styles.languageFilter}>\r\n                        <h3>Languages</h3>\r\n                        {languages.map((language, index) => (\r\n                            <div key={language} className={styles.checkboxContainer}>\r\n                                <input type=\"checkbox\"\r\n                                id={language}\r\n                                value={language}\r\n                                checked={checkedLanguage.includes(language)}\r\n                                onChange={handleCheckLanguageChange} />\r\n                                <label htmlFor={language}>{language}</label>\r\n                            </div>\r\n                            ))}\r\n                    </div>\r\n                    <button className={styles.searchButton} onClick={() => setTrigRender(trigRender + 1)}>\r\n                                Refresh Preferences\r\n                    </button>\r\n                </div>\r\n            </ScrollableSection>\r\n            </div>\r\n            <div className={styles.rightComp}>\r\n            <ScrollableSection>\r\n                <SearchMovie\r\n                    key={new Date().getTime()}\r\n                    genres = {checkedGenres}\r\n                    languages = {checkedLanguage}\r\n                />\r\n            </ScrollableSection>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Landing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}