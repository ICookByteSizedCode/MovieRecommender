{"ast":null,"code":"var _jsxFileName = \"/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520PROJECT3/frontend/src/pages/RecommendedMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header/Header.js';\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js';\nimport DisplayMovie from './DisplayMovie.js';\n// import MovieRecommender from '../components/MovieRecommender/MovieRecommender.module.css';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecommendedMovies({\n  userPreferences,\n  favoriteMovies\n}) {\n  _s();\n  const [recs, setRecs] = useState([]);\n  const [prefs, setPrefs] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const genreArr = globalThis.prefGen.map(genre => genre.name);\n  useEffect(() => {\n    const fetchRecs = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch('http://127.0.0.1:3001/submit-preferences', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          // body: JSON.stringify({preferences: userPreferences, favoriteMovies})\n          body: JSON.stringify({\n            selectedGenres: globalThis.prefGen,\n            selectedLanguages: globalThis.prefLang,\n            selectedMovies: globalThis.prefMov\n          })\n        });\n        if (!response.ok) throw new Error('Failed to Fetch');\n        const data = await response.json();\n        console.log(\"Fetched Recs:\", data);\n        // setRecs(data);\n        setRecs(data.map(movie => ({\n          ...movie,\n          mov_id: movie.id,\n          poster_path: movie.poster_path\n        })));\n        setIsLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching recs:\", err);\n        setError(err.message);\n        setIsLoading(false);\n      }\n    };\n    fetchRecs();\n  }, [userPreferences, favoriteMovies]);\n  const handleMovieClick = mov => {\n    console.log(\"movie data:\", mov);\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMWNkNGQxYmE3YTU4YjE1MTM4MzVkOTM1YjI2YjJiZSIsInN1YiI6IjY1ZTc4OWY5NTFmOTlhMDE2MmZiYjc1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vnaq5VRSoFW0czZA-0ldClHBIEhL-PWg1P7NXFi6VeA'\n      }\n    };\n    if (mov && mov.mov_id) {\n      fetch('https://api.themoviedb.org/3/movie/' + mov[\"mov_id\"] + '?language=en-US', options).then(response => response.json()).then(response => {\n        setSelectedMovie(response);\n      }).catch(err => console.error(err));\n    } else {\n      console.error(\"invalid movie id: \", mov);\n    }\n  };\n  // })\n\n  const handleBackClick = () => {\n    setSelectedMovie({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollableSection, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : Object.keys(selectedMovie).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieRecommender,\n        children: recs.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.movieCard,\n          onClick: () => handleMovieClick(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie['poster_path'] = \"https://image.tmdb.org/t/p/original\" + movie['poster_path'],\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.content,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.centerComp,\n        children: [/*#__PURE__*/_jsxDEV(DisplayMovie, {\n          movie: selectedMovie\n        }, new Date().getTime(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackClick,\n          className: styles.backButton,\n          children: \"Back to List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(RecommendedMovies, \"rLkGxwJmLqwmYCeulU1KuSJ8Ajo=\");\n_c = RecommendedMovies;\nexport default RecommendedMovies;\nvar _c;\n$RefreshReg$(_c, \"RecommendedMovies\");","map":{"version":3,"names":["React","useEffect","useState","Header","ScrollableSection","DisplayMovie","styles","jsxDEV","_jsxDEV","RecommendedMovies","userPreferences","favoriteMovies","_s","recs","setRecs","prefs","setPrefs","favorites","setFavorites","isLoading","setIsLoading","error","setError","selectedMovie","setSelectedMovie","genreArr","globalThis","prefGen","map","genre","name","fetchRecs","response","fetch","method","headers","body","JSON","stringify","selectedGenres","selectedLanguages","prefLang","selectedMovies","prefMov","ok","Error","data","json","console","log","movie","mov_id","id","poster_path","err","message","handleMovieClick","mov","options","accept","Authorization","then","catch","handleBackClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","movieRecommender","movieCard","onClick","src","alt","title","content","description","centerComp","Date","getTime","backButton","_c","$RefreshReg$"],"sources":["/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520PROJECT3/frontend/src/pages/RecommendedMovies.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Header from '../components/Header/Header.js'\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js'\nimport DisplayMovie from './DisplayMovie.js';\n// import MovieRecommender from '../components/MovieRecommender/MovieRecommender.module.css';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css'\n\nfunction RecommendedMovies({ userPreferences, favoriteMovies }) {\n\n    const [recs, setRecs] = useState([]);\n    const [prefs, setPrefs] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [selectedMovie, setSelectedMovie] = useState({})\n    const genreArr = globalThis.prefGen.map(genre => genre.name);\n    useEffect(() => {\n        const fetchRecs = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch('http://127.0.0.1:3001/submit-preferences', {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    // body: JSON.stringify({preferences: userPreferences, favoriteMovies})\n                    body: JSON.stringify({\n                        selectedGenres: globalThis.prefGen,\n                        selectedLanguages: globalThis.prefLang,\n                        selectedMovies: globalThis.prefMov })\n                });\n                if (!response.ok) throw new Error('Failed to Fetch');\n                const data = await response.json();\n                console.log(\"Fetched Recs:\", data);\n                // setRecs(data);\n                setRecs(data.map(movie => ({\n                  ...movie,\n                  mov_id: movie.id,\n                  poster_path: movie.poster_path\n                })));\n                setIsLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching recs:\", err);\n                setError(err.message);\n                setIsLoading(false);\n            }\n        }\n        fetchRecs();\n    }, [userPreferences, favoriteMovies])\n\n    const handleMovieClick = (mov) => {\n      console.log(\"movie data:\", mov);\n      const options = {\n            method: 'GET',\n            headers: {\n              accept: 'application/json',\n              Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMWNkNGQxYmE3YTU4YjE1MTM4MzVkOTM1YjI2YjJiZSIsInN1YiI6IjY1ZTc4OWY5NTFmOTlhMDE2MmZiYjc1NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vnaq5VRSoFW0czZA-0ldClHBIEhL-PWg1P7NXFi6VeA'\n            }\n          };\n      if (mov && mov.mov_id) {\n        fetch('https://api.themoviedb.org/3/movie/' + mov[\"mov_id\"] +'?language=en-US', options)\n          .then(response => response.json())\n          .then(response => {\n            setSelectedMovie(response);\n          })\n          .catch(err => console.error(err));\n      } else {\n        console.error(\"invalid movie id: \", mov);\n      }\n\n    }\n    // })\n\n    const handleBackClick = () => {\n      setSelectedMovie({});\n    };\n\n  return (\n    <div>\n      <Header />\n        <ScrollableSection>\n          {isLoading ? (\n            <p>Loading recommendations...</p>\n          ) : error ? (\n            <p>Error: {error}</p>\n          ) : Object.keys(selectedMovie).length === 0 ? (\n            <div className={styles.movieRecommender}>\n              {recs.map((movie) =>\n                <div key={movie.id} className={styles.movieCard} onClick={() => handleMovieClick(movie)}>\n                  <img src={movie['poster_path'] = \"https://image.tmdb.org/t/p/original\" + movie['poster_path']} alt={movie.title} />\n                    <div className={styles.content}>\n                        <h3>{movie.title}</h3>\n                        <p>{movie.description}</p>\n                    </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className={styles.centerComp}>\n              <DisplayMovie key={new Date().getTime()} movie={selectedMovie} />\n              <button onClick={handleBackClick} className={styles.backButton}>Back to List</button>\n            </div>\n          )}\n        </ScrollableSection>\n    </div>\n    );\n  }\n\nexport default RecommendedMovies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}