{"ast":null,"code":"var _jsxFileName = \"/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520Project2/frontend/src/pages/Landing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header/Header.js';\nimport Navbar from '../components/Navbar/Navbar.js';\nimport Footer from '../components/Footer/Footer.js';\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js';\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js';\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landing() {\n  _s();\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] : globalThis.prefGen;\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] : globalThis.prefLang;\n  console.log(checkedLanguage);\n  console.log(checkedGenres);\n  console.log(genres);\n  console.log(languages);\n  const handleCheckLanguageChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setCheckedLanguages([...checkedLanguage, value]);\n    } else {\n      setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    }\n    ;\n  };\n  const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\n  const handleCheckGenreChange = event => {\n    const checkedId = event.target.value;\n    console.log(checkedId);\n    console.log(\"check\" + checkedId);\n    if (event.target.checked) {\n      setCheckedGenres([...checkedGenres, checkedId]);\n    } else {\n      setCheckedGenres(checkedGenres.filter(id => id !== checkedId.toString()));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rowC,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.leftComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.filterSection,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.genreFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Genres\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: JSON.parse(genre),\n                  checked: checkedGenres.includes(genre.id.toString()),\n                  onChange: event => {\n                    handleCheckGenreChange(event);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `checkbox-${genre.id}`,\n                  children: genre.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 36\n                }, this)]\n              }, genre, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.languageFilter,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.checkboxContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: language,\n                  value: language,\n                  checked: checkedLanguage.includes(language),\n                  onChange: handleCheckLanguageChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: language,\n                  children: language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)]\n              }, language, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.searchButton,\n              onClick: () => setTrigRender(trigRender + 1),\n              children: \"Refresh Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rightComp,\n        children: /*#__PURE__*/_jsxDEV(ScrollableSection, {\n          children: /*#__PURE__*/_jsxDEV(SearchMovie, {\n            genres: checkedGenres,\n            languages: checkedLanguage\n          }, new Date().getTime(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_s(Landing, \"35fYb0EIJG6E76atFX13q83E7pc=\");\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","MovieRecommender","ScrollableSection","styles","SearchMovie","jsxDEV","_jsxDEV","Landing","_s","trigRender","setTrigRender","checkedGenres","setCheckedGenres","checkedLanguage","setCheckedLanguages","genres","globalThis","prefGen","undefined","languages","prefLang","console","log","handleCheckLanguageChange","event","value","checked","target","filter","item","arrayIncludesObject","array","object","some","isEqual","handleCheckGenreChange","checkedId","id","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","rowC","leftComp","filterSection","genreFilter","map","genre","index","checkboxContainer","type","JSON","parse","includes","onChange","htmlFor","name","languageFilter","language","searchButton","onClick","rightComp","Date","getTime","_c","$RefreshReg$"],"sources":["/Users/stavkinreich/Desktop/Stav/CS520/COMPSCI520Project2/frontend/src/pages/Landing.js"],"sourcesContent":["import React, {useState} from 'react';\nimport Header from '../components/Header/Header.js'\nimport Navbar from '../components/Navbar/Navbar.js'\nimport Footer from '../components/Footer/Footer.js'\nimport MovieRecommender from '../components/MovieRecommender/MovieRecommender.js'\nimport ScrollableSection from '../components/ScrollableSection/ScrollableSection.js'\nimport styles from '../components/MovieRecommender/MovieRecommender.module.css';\nimport SearchMovie from './SearchMovie';\n//issue with category container currently- basically should be horizontally scrollable row, like on netflix\n\nfunction Landing() {\n  const [trigRender, setTrigRender] = useState(0);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [checkedLanguage, setCheckedLanguages] = useState([]);\n  const genres = globalThis.prefGen === null || globalThis.prefGen === undefined ? [] :\n                         globalThis.prefGen;\n  const languages = globalThis.prefLang === null || globalThis.prefLang === undefined ? [] :\n                            globalThis.prefLang;\n  console.log(checkedLanguage);\n  console.log(checkedGenres);\n  console.log(genres)\n  console.log(languages)\n  const handleCheckLanguageChange = (event) => {\n      const { value, checked } = event.target;\n      if (checked) {\n        setCheckedLanguages([...checkedLanguage, value]);\n      } else {\n        setCheckedLanguages(checkedLanguage.filter(item => item !== value));\n    };\n    }\n  const arrayIncludesObject = (array, object) => array.some(item => isEqual(item, object));\n  const handleCheckGenreChange = (event) => {\n     const checkedId = event.target.value;\n     console.log(checkedId);\n     console.log(\"check\" + checkedId)\n     if(event.target.checked){\n      setCheckedGenres([...checkedGenres,checkedId])\n     }else{\n      setCheckedGenres(checkedGenres.filter(id=> id !== checkedId.toString()))\n     }\n     }\n  return (\n      <div >\n        <Header/>\n        <div className={styles.rowC}>\n            <div className={styles.leftComp}>\n            <ScrollableSection>\n                <div className={styles.filterSection}>\n                    <div className={styles.genreFilter}>\n                        <h3>Genres</h3>\n                        {genres.map((genre, index) => (\n                            <div key={genre} className={styles.checkboxContainer}>\n                                <input\n                                   type=\"checkbox\"\n                                   value={JSON.parse(genre)}\n                                   checked={checkedGenres.includes(genre.id.toString())}\n                                   onChange={(event) => { handleCheckGenreChange(event) }}\n                                   />\n                                   <label htmlFor={`checkbox-${genre.id}`}>{genre.name}</label>\n                            </div>\n                            ))}\n                    </div>\n                    <div className={styles.languageFilter}>\n                        <h3>Languages</h3>\n                        {languages.map((language, index) => (\n                            <div key={language} className={styles.checkboxContainer}>\n                                <input type=\"checkbox\"\n                                id={language}\n                                value={language}\n                                checked={checkedLanguage.includes(language)}\n                                onChange={handleCheckLanguageChange} />\n                                <label htmlFor={language}>{language}</label>\n                            </div>\n                            ))}\n                    </div>\n                    <button className={styles.searchButton} onClick={() => setTrigRender(trigRender + 1)}>\n                                Refresh Preferences\n                    </button>\n                </div>\n            </ScrollableSection>\n            </div>\n            <div className={styles.rightComp}>\n            <ScrollableSection>\n                <SearchMovie\n                    key={new Date().getTime()}\n                    genres = {checkedGenres}\n                    languages = {checkedLanguage}\n                />\n            </ScrollableSection>\n            </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Landing;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,gBAAgB,MAAM,oDAAoD;AACjF,OAAOC,iBAAiB,MAAM,sDAAsD;AACpF,OAAOC,MAAM,MAAM,4DAA4D;AAC/E,OAAOC,WAAW,MAAM,eAAe;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,eAAe,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC3D,MAAMkB,MAAM,GAAGC,UAAU,CAACC,OAAO,KAAK,IAAI,IAAID,UAAU,CAACC,OAAO,KAAKC,SAAS,GAAG,EAAE,GAC5DF,UAAU,CAACC,OAAO;EACzC,MAAME,SAAS,GAAGH,UAAU,CAACI,QAAQ,KAAK,IAAI,IAAIJ,UAAU,CAACI,QAAQ,KAAKF,SAAS,GAAG,EAAE,GAC9DF,UAAU,CAACI,QAAQ;EAC7CC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAACX,aAAa,CAAC;EAC1BU,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnBM,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB,MAAMI,yBAAyB,GAAIC,KAAK,IAAK;IACzC,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACvC,IAAID,OAAO,EAAE;MACXZ,mBAAmB,CAAC,CAAC,GAAGD,eAAe,EAAEY,KAAK,CAAC,CAAC;IAClD,CAAC,MAAM;MACLX,mBAAmB,CAACD,eAAe,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKJ,KAAK,CAAC,CAAC;IACvE;IAAC;EACD,CAAC;EACH,MAAMK,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,CAACE,IAAI,CAACJ,IAAI,IAAIK,OAAO,CAACL,IAAI,EAAEG,MAAM,CAAC,CAAC;EACxF,MAAMG,sBAAsB,GAAIX,KAAK,IAAK;IACvC,MAAMY,SAAS,GAAGZ,KAAK,CAACG,MAAM,CAACF,KAAK;IACpCJ,OAAO,CAACC,GAAG,CAACc,SAAS,CAAC;IACtBf,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGc,SAAS,CAAC;IAChC,IAAGZ,KAAK,CAACG,MAAM,CAACD,OAAO,EAAC;MACvBd,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAACyB,SAAS,CAAC,CAAC;IAC/C,CAAC,MAAI;MACJxB,gBAAgB,CAACD,aAAa,CAACiB,MAAM,CAACS,EAAE,IAAGA,EAAE,KAAKD,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzE;EACA,CAAC;EACJ,oBACIhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA,CAACR,MAAM;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTrC,OAAA;MAAKsC,SAAS,EAAEzC,MAAM,CAAC0C,IAAK;MAAAN,QAAA,gBACxBjC,OAAA;QAAKsC,SAAS,EAAEzC,MAAM,CAAC2C,QAAS;QAAAP,QAAA,eAChCjC,OAAA,CAACJ,iBAAiB;UAAAqC,QAAA,eACdjC,OAAA;YAAKsC,SAAS,EAAEzC,MAAM,CAAC4C,aAAc;YAAAR,QAAA,gBACjCjC,OAAA;cAAKsC,SAAS,EAAEzC,MAAM,CAAC6C,WAAY;cAAAT,QAAA,gBAC/BjC,OAAA;gBAAAiC,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACd5B,MAAM,CAACkC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB7C,OAAA;gBAAiBsC,SAAS,EAAEzC,MAAM,CAACiD,iBAAkB;gBAAAb,QAAA,gBACjDjC,OAAA;kBACG+C,IAAI,EAAC,UAAU;kBACf5B,KAAK,EAAE6B,IAAI,CAACC,KAAK,CAACL,KAAK,CAAE;kBACzBxB,OAAO,EAAEf,aAAa,CAAC6C,QAAQ,CAACN,KAAK,CAACb,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAE;kBACrDmB,QAAQ,EAAGjC,KAAK,IAAK;oBAAEW,sBAAsB,CAACX,KAAK,CAAC;kBAAC;gBAAE;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD,CAAC,eACFrC,OAAA;kBAAOoD,OAAO,EAAG,YAAWR,KAAK,CAACb,EAAG,EAAE;kBAAAE,QAAA,EAAEW,KAAK,CAACS;gBAAI;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAPzDO,KAAK;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACNrC,OAAA;cAAKsC,SAAS,EAAEzC,MAAM,CAACyD,cAAe;cAAArB,QAAA,gBAClCjC,OAAA;gBAAAiC,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACjBxB,SAAS,CAAC8B,GAAG,CAAC,CAACY,QAAQ,EAAEV,KAAK,kBAC3B7C,OAAA;gBAAoBsC,SAAS,EAAEzC,MAAM,CAACiD,iBAAkB;gBAAAb,QAAA,gBACpDjC,OAAA;kBAAO+C,IAAI,EAAC,UAAU;kBACtBhB,EAAE,EAAEwB,QAAS;kBACbpC,KAAK,EAAEoC,QAAS;kBAChBnC,OAAO,EAAEb,eAAe,CAAC2C,QAAQ,CAACK,QAAQ,CAAE;kBAC5CJ,QAAQ,EAAElC;gBAA0B;kBAAAiB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACvCrC,OAAA;kBAAOoD,OAAO,EAAEG,QAAS;kBAAAtB,QAAA,EAAEsB;gBAAQ;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GANtCkB,QAAQ;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOb,CACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACNrC,OAAA;cAAQsC,SAAS,EAAEzC,MAAM,CAAC2D,YAAa;cAACC,OAAO,EAAEA,CAAA,KAAMrD,aAAa,CAACD,UAAU,GAAG,CAAC,CAAE;cAAA8B,QAAA,EAAC;YAEtF;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACNrC,OAAA;QAAKsC,SAAS,EAAEzC,MAAM,CAAC6D,SAAU;QAAAzB,QAAA,eACjCjC,OAAA,CAACJ,iBAAiB;UAAAqC,QAAA,eACdjC,OAAA,CAACF,WAAW;YAERW,MAAM,EAAIJ,aAAc;YACxBQ,SAAS,EAAIN;UAAgB,GAFxB,IAAIoD,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACnC,EAAA,CAnFQD,OAAO;AAAA4D,EAAA,GAAP5D,OAAO;AAqFhB,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}